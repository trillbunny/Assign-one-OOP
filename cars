import java.util.Scanner;

public class Main {

    private String carMake;  // Brand of the vehicle
    private String carModel; // Specific model name
    private boolean isAvailable; // Status of availability

    // Constructor to initialize car details
    public Main(String carMake, String carModel) {
        this.carMake = carMake;
        this.carModel = carModel;
        this.isAvailable = true;  // All cars start as available
    }

    // Method to display the car's availability
    public void showAvailability() {
        if (isAvailable) {
            System.out.println("Great news! " + carMake + " " + carModel + " is ready for rent.");
        } else {
            System.out.println("Sorry, " + carMake + " " + carModel + " is currently rented out.");
        }
    }

    // Method to handle car rental process
    public void rentCar() {
        if (isAvailable) {
            isAvailable = false;  // Mark car as rented
            System.out.println("Congratulations! You have successfully rented the " + carMake + " " + carModel + ".");
        } else {
            System.out.println("Apologies, the " + carMake + " " + carModel + " is not available right now.");
        }
    }

    // Method to process car return
    public void returnCar() {
        if (!isAvailable) {
            isAvailable = true;  // Mark car as available again
            System.out.println("Thank you for returning the " + carMake + " " + carModel + ". We hope you had a great drive!");
        } else {
            System.out.println("It looks like the " + carMake + " " + carModel + " was never rented.");
        }
    }

    // Main method to simulate the rental process
    public static void main(String[] args) {
        Scanner inputScanner = new Scanner(System.in);  // Scanner for user input

        // Create car objects
        Main nissan = new Main("Nissan", "Altima");
        Main prado = new Main("Toyota", "Prado");
        Main vitz = new Main("Toyota", "Vitz");

        // Get the customer's name
        System.out.print("\nWelcome to the Car Rental Service! Please enter your name: ");
        String customerName = inputScanner.nextLine();

        // Ask the user which car they want to rent
        System.out.print("\nHello, " + customerName + "! Which vehicle would you like to rent? (Nissan, Prado, Vitz): ");
        String carToRent = inputScanner.nextLine();

        // Rent the chosen car
        boolean rentedCar = false;
        switch (carToRent.toLowerCase()) {
            case "nissan":
                if (nissan.isAvailable) {
                    nissan.rentCar();
                    rentedCar = true;
                } else {
                    System.out.println("Sorry, the Nissan Altima is already booked.");
                }
                break;
            case "prado":
                if (prado.isAvailable) {
                    prado.rentCar();
                    rentedCar = true;
                } else {
                    System.out.println("Sorry, the Toyota Prado is already booked.");
                }
                break;
            case "vitz":
                if (vitz.isAvailable) {
                    vitz.rentCar();
                    rentedCar = true;
                } else {
                    System.out.println("Sorry, the Toyota Vitz is already booked.");
                }
                break;
            default:
                System.out.println("Oops! That vehicle is not in our inventory.");
        }

        if (!rentedCar) {
            System.out.println("\nPlease choose an available vehicle from our list.");
            return;
        }

        // Ask the user to return the car
        System.out.print("\nWhich vehicle are you returning? (Nissan, Prado, Vitz): ");
        String carToReturn = inputScanner.nextLine();

        // Process the return based on user input
        switch (carToReturn.toLowerCase()) {
            case "nissan":
                nissan.returnCar();
                break;
            case "prado":
                prado.returnCar();
                break;
            case "vitz":
                vitz.returnCar();
                break;
            default:
                System.out.println("Invalid choice! Please ensure you are returning a vehicle from our fleet.");
        }

        // Display updated availability status
        System.out.println("\nUpdated availability of our vehicles:");
        nissan.showAvailability();
        prado.showAvailability();
        vitz.showAvailability();

        // Close scanner
        inputScanner.close();
    }
}
